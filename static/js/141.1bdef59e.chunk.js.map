{"version":3,"file":"static/js/141.1bdef59e.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","tools/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FilmName = styled.p`\n  margin: 0;\n  padding: 2px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const FilmCards = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 10px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const FilmItem = styled.li`\n  transition: all 0.2s ease-in-out;\n\n  :hover,\n  :focus {\n    transform: scale(1.03);\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { FilmCards, FilmItem, FilmName } from './MovieList.styled';\n\nexport const HomeList = ({ trendFilms }) => {\n  const location = useLocation();\n  if (!trendFilms) {\n    return;\n  }\n  return (\n    <div>\n      <FilmCards>\n        {trendFilms.map(\n          ({ original_name, original_title, id, poster_path }) => {\n            return (\n              <FilmItem key={id} id={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://www.themoviedb.org/t/p/w500${poster_path}`\n                        : 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg'\n                    }\n                    alt=\"Poster film\"\n                    title={original_name || original_title}\n                    width=\"230\"\n                  />\n                  <FilmName>{original_name || original_title}</FilmName>\n                </Link>\n              </FilmItem>\n            );\n          }\n        )}\n      </FilmCards>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const FormSearch = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const ButtonSubmit = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { FiSearch } from 'react-icons/fi';\nimport { ButtonSubmit, FormSearch, Header, Input } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const initialValues = {\n    value: '',\n  };\n\n  const searchSubmit = (values, { resetForm }) => {\n    onSubmit(values);\n    resetForm();\n  };\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={searchSubmit}>\n        <Header>\n          <FormSearch>\n            <ButtonSubmit type=\"submit\">\n              <span>\n                <FiSearch size={20} />\n              </span>\n            </ButtonSubmit>\n\n            <Input\n              type=\"text\"\n              name=\"value\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search films\"\n            />\n          </FormSearch>\n        </Header>\n      </Formik>\n    </>\n  );\n};\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { HomeList } from 'components/MovieList/MovieList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchSearchFilm } from 'tools/Api';\n\nexport const Movies = () => {\n  const [searchFilm, setSearchFilm] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const quary = searchParams.get('quary');\n\n  useEffect(() => {\n    if (!quary) return;\n    try {\n      const searchFilms = fetchSearchFilm(quary);\n\n      searchFilms.then(data => {\n        if (data.length === 0) {\n          toast.error(`Nothing is found with this film name: ${quary}!`, {\n            position: toast.POSITION.TOP_LEFT,\n          });\n        }\n\n        return setSearchFilm(data);\n      });\n    } catch (message) {\n      console.warn('message ERROR movie', message);\n      toast.error(message);\n    }\n  }, [quary]);\n\n  const onSubmit = values => {\n    if (values.value.trim() === '') {\n      return toast.warn('Enter a word for search');\n    } else if (values.value === quary) {\n      return;\n    }\n\n    setSearchParams({ quary: values.value });\n  };\n\n  return (\n    <div>\n      <SearchBox onSubmit={onSubmit} />\n      {searchFilm && <HomeList trendFilms={searchFilm} />}\n    </div>\n  );\n};\n","import axios from 'axios';\nconst API_KEY = '0deed939492f10fa02b7b267dbfb9d49';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_GENRES = 'https://api.themoviedb.org/3/genre/movie/list?';\nconst URL_CAST = 'https://api.themoviedb.org/3/movie/';\nconst URL = 'https://api.themoviedb.org/3/';\n\n// Фетч трендових фільмів\nexport default async function fetchTrending() {\n  const config = {\n    method: 'get',\n    url: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(config);\n\n  const data = response.data.results;\n  return data;\n}\n// Фетч жанрів\nexport async function fetchGenres() {\n  const url = `${URL_GENRES}&language=en-US&api_key=${API_KEY}`;\n\n  const response = await axios(url);\n\n  const data = response.data.genres;\n  return data;\n}\n// Фетч Акторів\nexport async function fetchCast(Id) {\n  const url = `${URL_CAST}${Id}/credits?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data.cast;\n  return data;\n}\n\n// Фетч фільм-ревью\nexport async function fetchReviews(Id) {\n  const url = `${URL_CAST}${Id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\n// Пошук фільмів\n\nexport async function fetchSearchFilm(quary) {\n  const url = `${URL}search/movie?api_key=${API_KEY}&language=en-US&query=${quary}&page=1&include_adult=false`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\n// Пошук по айді інформації про фільм\n\nexport async function ApiMovieInfo(Id) {\n  const url = `${URL}movie/${Id}?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data;\n  return data;\n}\n"],"names":["FilmName","styled","_templateObject","_taggedTemplateLiteral","FilmCards","_templateObject2","FilmItem","_templateObject3","HomeList","_ref","trendFilms","location","useLocation","_jsx","children","map","_ref2","original_name","original_title","id","poster_path","_jsxs","Link","to","concat","state","from","src","alt","title","width","Header","FormSearch","Form","ButtonSubmit","Input","Field","_templateObject4","SearchBox","onSubmit","_Fragment","Formik","initialValues","value","values","resetForm","type","FiSearch","size","name","autoComplete","autoFocus","placeholder","Movies","_useState","useState","_useState2","_slicedToArray","searchFilm","setSearchFilm","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","quary","get","useEffect","fetchSearchFilm","then","data","length","toast","position","message","console","warn","trim","API_KEY","BASE_URL","URL_CAST","URL","fetchTrending","_fetchTrending","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","response","wrap","_context","prev","next","method","url","params","api_key","axios","sent","results","abrupt","stop","fetchCast","_x","_fetchCast","_callee3","Id","_context3","cast","fetchReviews","_x2","_fetchReviews","_callee4","_context4","_x3","_fetchSearchFilm","_callee5","_context5","ApiMovieInfo","_x4","_ApiMovieInfo","_callee6","_context6"],"sourceRoot":""}