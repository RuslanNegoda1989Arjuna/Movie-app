{"version":3,"file":"static/js/304.767c5300.chunk.js","mappings":"4LAEaA,EAAWC,EAAAA,EAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yGAQnBC,EAAYH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6QAarBG,EAAWL,EAAAA,EAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,0G,SCpBpBK,EAAW,SAAHC,GAAwB,IAAlBC,EAAUD,EAAVC,WACnBC,GAAWC,EAAAA,EAAAA,MACjB,GAAKF,EAGL,OACEG,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACT,EAAS,CAAAU,SACPJ,EAAWK,KACV,SAAAC,GAAyD,IAAtDC,EAAaD,EAAbC,cAAeC,EAAcF,EAAdE,eAAgBC,EAAEH,EAAFG,GAAIC,EAAWJ,EAAXI,YACpC,OACEP,EAAAA,EAAAA,KAACP,EAAQ,CAAUa,GAAIA,EAAGL,UACxBO,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaL,GAAMM,MAAO,CAAEC,KAAMf,GAAWG,SAAA,EACnDD,EAAAA,EAAAA,KAAA,OACEc,IACEP,EAAW,sCAAAI,OAC+BJ,GACtC,+EAENQ,IAAI,cACJC,MAAOZ,GAAiBC,EACxBY,MAAM,SAERjB,EAAAA,EAAAA,KAACb,EAAQ,CAAAc,SAAEG,GAAiBC,QAZjBC,EAgBnB,OAKV,C,iICjCaY,E,QAAgB9B,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uL,SCIzB6B,EAAO,WAClB,IAAAC,GAAoCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCvB,EAAUyB,EAAA,GAAEE,EAAaF,EAAA,GAehC,OAZAG,EAAAA,EAAAA,YAAU,WACR,KACgBC,EAAAA,EAAAA,MAERC,MAAK,SAAAC,GACT,OAAOJ,EAAcI,EACvB,GACF,CAAE,MAAOC,GACPC,EAAAA,GAAAA,MAAY,CAAED,MAAAA,GAChB,CACF,GAAG,KAGDrB,EAAAA,EAAAA,MAAA,QAAAP,SAAA,EACED,EAAAA,EAAAA,KAACkB,EAAa,CAAAjB,SAAC,oBACfD,EAAAA,EAAAA,KAACL,EAAAA,EAAQ,CAACE,WAAYA,MAG5B,C,yLC3BMkC,EAAU,mCACVC,EAAW,gDAEXC,EAAW,sCACXC,EAAM,gCAGG,SAAeR,IAAa,OAAAS,EAAAC,MAAC,KAADC,UAAA,CAc3C,SAAAF,IADC,OACDA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAde,SAAAC,IAAA,IAAAC,EAAAC,EAAAf,EAAA,OAAAW,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOZ,OANKL,EAAS,CACbM,OAAQ,MACRC,IAAKjB,EACLkB,OAAQ,CACNC,QAASpB,IAEZc,EAAAE,KAAA,GAEsBK,EAAAA,EAAAA,GAAMV,GAAQ,KAAD,EAED,OAF7BC,EAAQE,EAAAQ,KAERzB,EAAOe,EAASf,KAAK0B,QAAOT,EAAAU,OAAA,SAC3B3B,GAAI,wBAAAiB,EAAAW,OAAA,GAAAf,EAAA,MACZL,MAAA,KAAAC,UAAA,CAWM,SAAeoB,EAASC,GAAA,OAAAC,EAAAvB,MAAC,KAADC,UAAA,CAS/B,SAAAsB,IAFC,OAEDA,GAAArB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MATO,SAAAoB,EAAyBC,GAAE,IAAAZ,EAAAN,EAAAf,EAAA,OAAAW,EAAAA,EAAAA,KAAAK,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACuB,OAAjDE,EAAG,GAAAtC,OAAMsB,GAAQtB,OAAGkD,EAAE,qBAAAlD,OAAoBoB,EAAO,mBAAA+B,EAAAf,KAAA,GAEhCK,EAAAA,EAAAA,GAAMH,GAAK,KAAD,EAED,OAF1BN,EAAQmB,EAAAT,KAERzB,EAAOe,EAASf,KAAKmC,KAAID,EAAAP,OAAA,SACxB3B,GAAI,wBAAAkC,EAAAN,OAAA,GAAAI,EAAA,MACZxB,MAAA,KAAAC,UAAA,CAGM,SAAe2B,EAAYC,GAAA,OAAAC,EAAA9B,MAAC,KAADC,UAAA,CASlC,SAAA6B,IAFC,OAEDA,GAAA5B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MATO,SAAA2B,EAA4BN,GAAE,IAAAZ,EAAAN,EAAAf,EAAA,OAAAW,EAAAA,EAAAA,KAAAK,MAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,OACoB,OAAjDE,EAAG,GAAAtC,OAAMsB,GAAQtB,OAAGkD,EAAE,qBAAAlD,OAAoBoB,EAAO,0BAAAqC,EAAArB,KAAA,GAEhCK,EAAAA,EAAAA,GAAMH,GAAK,KAAD,EAEE,OAF7BN,EAAQyB,EAAAf,KAERzB,EAAOe,EAASf,KAAK0B,QAAOc,EAAAb,OAAA,SAC3B3B,GAAI,wBAAAwC,EAAAZ,OAAA,GAAAW,EAAA,MACZ/B,MAAA,KAAAC,UAAA,CAIM,SAAegC,EAAeC,GAAA,OAAAC,EAAAnC,MAAC,KAADC,UAAA,CASrC,SAAAkC,IAFC,OAEDA,GAAAjC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MATO,SAAAgC,EAA+BC,GAAK,IAAAxB,EAAAN,EAAAf,EAAA,OAAAW,EAAAA,EAAAA,KAAAK,MAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,OACsC,OAAzEE,EAAG,GAAAtC,OAAMuB,EAAG,yBAAAvB,OAAwBoB,EAAO,0BAAApB,OAAyB8D,EAAK,+BAAAC,EAAA3B,KAAA,GAExDK,EAAAA,EAAAA,GAAMH,GAAK,KAAD,EAEE,OAF7BN,EAAQ+B,EAAArB,KAERzB,EAAOe,EAASf,KAAK0B,QAAOoB,EAAAnB,OAAA,SAC3B3B,GAAI,wBAAA8C,EAAAlB,OAAA,GAAAgB,EAAA,MACZpC,MAAA,KAAAC,UAAA,CAIM,SAAesC,EAAYC,GAAA,OAAAC,EAAAzC,MAAC,KAADC,UAAA,CAOjC,SAAAwC,IAAA,OAAAA,GAAAvC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAPM,SAAAsC,EAA4BjB,GAAE,IAAAZ,EAAAN,EAAAf,EAAA,OAAAW,EAAAA,EAAAA,KAAAK,MAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OACa,OAA1CE,EAAG,GAAAtC,OAAMuB,EAAG,UAAAvB,OAASkD,EAAE,aAAAlD,OAAYoB,EAAO,mBAAAgD,EAAAhC,KAAA,GAEzBK,EAAAA,EAAAA,GAAMH,GAAK,KAAD,EAEN,OAFrBN,EAAQoC,EAAA1B,KAERzB,EAAOe,EAASf,KAAImD,EAAAxB,OAAA,SACnB3B,GAAI,wBAAAmD,EAAAvB,OAAA,GAAAsB,EAAA,MACZ1C,MAAA,KAAAC,UAAA,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","tools/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FilmName = styled.p`\n  margin: 0;\n  padding: 2px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const FilmCards = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 10px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const FilmItem = styled.li`\n  transition: all 0.2s ease-in-out;\n\n  :hover,\n  :focus {\n    transform: scale(1.03);\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { FilmCards, FilmItem, FilmName } from './MovieList.styled';\n\nexport const HomeList = ({ trendFilms }) => {\n  const location = useLocation();\n  if (!trendFilms) {\n    return;\n  }\n  return (\n    <div>\n      <FilmCards>\n        {trendFilms.map(\n          ({ original_name, original_title, id, poster_path }) => {\n            return (\n              <FilmItem key={id} id={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://www.themoviedb.org/t/p/w500${poster_path}`\n                        : 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg'\n                    }\n                    alt=\"Poster film\"\n                    title={original_name || original_title}\n                    width=\"230\"\n                  />\n                  <FilmName>{original_name || original_title}</FilmName>\n                </Link>\n              </FilmItem>\n            );\n          }\n        )}\n      </FilmCards>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const TrendingTitle = styled.h1`\n  margin: 0px;\n  margin-top: 10px;\n  margin-left: 10px;\n  padding-bottom: 5px;\n  text-align: center;\n  border-bottom: 3px solid black;\n  border-top: 3px solid black;\n`;\n","import { HomeList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport fetchTrending from 'tools/Api';\nimport { TrendingTitle } from './Home.styled';\n\nexport const Home = () => {\n  const [trendFilms, setTrendFilms] = useState();\n\n  //  Фетч по трендовим фільмам\n  useEffect(() => {\n    try {\n      const films = fetchTrending();\n\n      films.then(data => {\n        return setTrendFilms(data);\n      });\n    } catch (error) {\n      toast.error({ error });\n    }\n  }, []);\n\n  return (\n    <main>\n      <TrendingTitle>Trending Today</TrendingTitle>\n      <HomeList trendFilms={trendFilms} />\n    </main>\n  );\n};\n","import axios from 'axios';\nconst API_KEY = '0deed939492f10fa02b7b267dbfb9d49';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_GENRES = 'https://api.themoviedb.org/3/genre/movie/list?';\nconst URL_CAST = 'https://api.themoviedb.org/3/movie/';\nconst URL = 'https://api.themoviedb.org/3/';\n\n// Фетч трендових фільмів\nexport default async function fetchTrending() {\n  const config = {\n    method: 'get',\n    url: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(config);\n\n  const data = response.data.results;\n  return data;\n}\n// Фетч жанрів\nexport async function fetchGenres() {\n  const url = `${URL_GENRES}&language=en-US&api_key=${API_KEY}`;\n\n  const response = await axios(url);\n\n  const data = response.data.genres;\n  return data;\n}\n// Фетч Акторів\nexport async function fetchCast(Id) {\n  const url = `${URL_CAST}${Id}/credits?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data.cast;\n  return data;\n}\n\n// Фетч фільм-ревью\nexport async function fetchReviews(Id) {\n  const url = `${URL_CAST}${Id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\n// Пошук фільмів\n\nexport async function fetchSearchFilm(quary) {\n  const url = `${URL}search/movie?api_key=${API_KEY}&language=en-US&query=${quary}&page=1&include_adult=false`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\n// Пошук по айді інформації про фільм\n\nexport async function ApiMovieInfo(Id) {\n  const url = `${URL}movie/${Id}?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data;\n  return data;\n}\n"],"names":["FilmName","styled","_templateObject","_taggedTemplateLiteral","FilmCards","_templateObject2","FilmItem","_templateObject3","HomeList","_ref","trendFilms","location","useLocation","_jsx","children","map","_ref2","original_name","original_title","id","poster_path","_jsxs","Link","to","concat","state","from","src","alt","title","width","TrendingTitle","Home","_useState","useState","_useState2","_slicedToArray","setTrendFilms","useEffect","fetchTrending","then","data","error","toast","API_KEY","BASE_URL","URL_CAST","URL","_fetchTrending","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","response","wrap","_context","prev","next","method","url","params","api_key","axios","sent","results","abrupt","stop","fetchCast","_x","_fetchCast","_callee3","Id","_context3","cast","fetchReviews","_x2","_fetchReviews","_callee4","_context4","fetchSearchFilm","_x3","_fetchSearchFilm","_callee5","quary","_context5","ApiMovieInfo","_x4","_ApiMovieInfo","_callee6","_context6"],"sourceRoot":""}